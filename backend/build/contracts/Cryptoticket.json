{
  "contractName": "Cryptoticket",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "InterfaceId_ERC165",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_proxyRegistryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "484:1934:0:-;;;602:149;8:9:-1;5:2;;;30:1;27;20:12;5:2;602:149:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1166:276:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:38:7;274:10;668:18;;649;;;:38;;;:::i;:::-;1258::12;293:10:11;1277:18:12;;1258;;;:38;;;:::i;:::-;1302:44;935:10:11;1321:24:12;;1302:18;;;:44;;;:::i;:::-;1229:5:14;1221;:13;;;;;;;;;;;;:::i;:::-;;1250:7;1240;:17;;;;;;;;;;;;:::i;:::-;;1337:48;1081:10:11;1356:28:14;;1337:18;;;:48;;;:::i;:::-;1391:46;1343:10:11;1410:26:14;;1391:18;;;:46;;;:::i;:::-;1166:276;;575:10:9;567:5;;:18;;;;;;;;;;;;;;;;;;722:21:0;699:20;;:44;;;;;;;;;;;;;;;;;;602:149;484:1934;;987:156:7;1081:10;1065:26;;:12;:26;;;;;1057:35;;;;;;;;1134:4;1098:19;:33;1118:12;1098:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;987:156;:::o;484:1934:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "484:1934:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:142:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;775:142:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1536:70:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1536:70:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1536:70:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3289:111:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3289:111:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2785:277;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2785:277:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2805:87:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2805:87:14;;;;;;;;;;;;;;;;;;;;;;;230:54:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;230:54:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4780:370:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4780:370:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:203:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2460:203:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5766:199:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5766:199:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2240:140:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3216::14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3216:140:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1898:164:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1898:164:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1543:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1543:142:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:9;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:9;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:217:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1074:217:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1074:217:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:74:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1704:74:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1704:74:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3680:205:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3680:205:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6647:276;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6647:276:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1966:133:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1966:133:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1966:133:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1565:103:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1565:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1565:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:383;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2020:383:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:142:7;858:4;879:19;:33;899:12;879:33;;;;;;;;;;;;;;;;;;;;;;;;;;;872:40;;775:142;;;:::o;1536:70:14:-;1575:6;1596:5;1589:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1536:70;:::o;3289:111:12:-;3349:7;3371:14;:24;3386:8;3371:24;;;;;;;;;;;;;;;;;;;;;3364:31;;3289:111;;;:::o;2785:277::-;2846:13;2862:17;2870:8;2862:7;:17::i;:::-;2846:33;;2900:5;2893:12;;:3;:12;;;;2885:21;;;;;;;;2934:5;2920:19;;:10;:19;;;:58;;;;2943:35;2960:5;2967:10;2943:16;:35::i;:::-;2920:58;2912:67;;;;;;;;3013:3;2986:14;:24;3001:8;2986:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3048:8;3043:3;3027:30;;3036:5;3027:30;;;;;;;;;;;;2785:277;;;:::o;2805:87:14:-;2849:7;2871:9;:16;;;;2864:23;;2805:87;:::o;230:54:7:-;274:10;230:54;;;:::o;4780:370:12:-;4891:39;4909:10;4921:8;4891:17;:39::i;:::-;4883:48;;;;;;;;4962:1;4945:19;;:5;:19;;;;4937:28;;;;;;;;4994:1;4979:17;;:3;:17;;;;4971:26;;;;;;;;5004:30;5018:5;5025:8;5004:13;:30::i;:::-;5040:32;5056:5;5063:8;5040:15;:32::i;:::-;5078:25;5089:3;5094:8;5078:10;:25::i;:::-;5136:8;5131:3;5115:30;;5124:5;5115:30;;;;;;;;;;;;4780:370;;;:::o;2460:203:14:-;2566:7;2600:17;2610:6;2600:9;:17::i;:::-;2591:6;:26;2583:35;;;;;;;;2631:11;:19;2643:6;2631:19;;;;;;;;;;;;;;;2651:6;2631:27;;;;;;;;;;;;;;;;;;2624:34;;2460:203;;;;:::o;5766:199:12:-;5918:42;5935:5;5942:3;5947:8;5918:42;;;;;;;;;;;;;:16;:42::i;:::-;5766:199;;;:::o;2240:140::-;2295:4;2307:13;2323:10;:20;2334:8;2323:20;;;;;;;;;;;;;;;;;;;;;2307:36;;2373:1;2356:19;;:5;:19;;;;2349:26;;2240:140;;;;:::o;3216::14:-;3275:7;3307:13;:11;:13::i;:::-;3298:6;:22;3290:31;;;;;;;;3334:9;3344:6;3334:17;;;;;;;;;;;;;;;;;;3327:24;;3216:140;;;:::o;1898:164:12:-;1954:7;1969:13;1985:10;:20;1996:8;1985:20;;;;;;;;;;;;;;;;;;;;;1969:36;;2036:1;2019:19;;:5;:19;;;;2011:28;;;;;;;;2052:5;2045:12;;1898:164;;;;:::o;1543:142::-;1599:7;1640:1;1622:20;;:6;:20;;;;1614:29;;;;;;;;1656:16;:24;1673:6;1656:24;;;;;;;;;;;;;;;;1649:31;;1543:142;;;:::o;1001:111:9:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;238:20::-;;;;;;;;;;;;;:::o;1074:217:0:-;1149:6;1174:109;1192:14;:12;:14::i;:::-;1174:109;;;;;;;;;;;;;;;;;;1218:26;1235:8;1218:16;:26::i;:::-;1174:109;;;;;;;;;;;;;;;;;;1256:26;1273:8;1256:16;:26::i;:::-;1174:17;:109::i;:::-;1167:116;;1074:217;;;;:::o;1704:74:14:-;1745:6;1766:7;1759:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:74;:::o;3680:205:12:-;3764:10;3757:17;;:3;:17;;;;3749:26;;;;;;;;3818:9;3781:17;:29;3799:10;3781:29;;;;;;;;;;;;;;;:34;3811:3;3781:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;3865:3;3838:42;;3853:10;3838:42;;;3870:9;3838:42;;;;;;;;;;;;;;;;;;;;;;3680:205;;:::o;6647:276::-;6771:34;6784:5;6791:3;6796:8;6771:12;:34::i;:::-;6864:53;6889:5;6896:3;6901:8;6911:5;6864:24;:53::i;:::-;6856:62;;;;;;;;6647:276;;;;:::o;1966:133:14:-;2023:6;2045:16;2052:8;2045:6;:16::i;:::-;2037:25;;;;;;;;2075:9;:19;2085:8;2075:19;;;;;;;;;;;2068:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1966:133;;;:::o;1565:103:0:-;1609:6;1628:32;;;;;;;;;;;;;;;;;;;;1565:103;:::o;2020:383::-;2099:4;2178:27;2222:20;;;;;;;;;;;2178:65;;2289:8;2257:40;;:13;:21;;;2279:5;2257:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2257:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2257:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2257:28:0;;;;;;;;;;;;;;;;:40;;;2254:83;;;2321:4;2314:11;;;;2254:83;2356:39;2379:5;2386:8;2356:22;:39::i;:::-;2349:46;;2020:383;;;;;;:::o;1274:103:9:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;7270:438:12:-;7380:4;7394:13;7410:17;7418:8;7410:7;:17::i;:::-;7394:33;;7606:5;7594:17;;:8;:17;;;:60;;;;7646:8;7621:33;;:21;7633:8;7621:11;:21::i;:::-;:33;;;7594:60;:103;;;;7664:33;7681:5;7688:8;7664:16;:33::i;:::-;7594:103;7579:124;;7270:438;;;;;:::o;8762:214::-;8863:6;8842:27;;:17;8850:8;8842:7;:17::i;:::-;:27;;;8834:36;;;;;;;;8916:1;8880:38;;:14;:24;8895:8;8880:24;;;;;;;;;;;;;;;;;;;;;:38;;;;8876:96;;;8963:1;8928:14;:24;8943:8;8928:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8876:96;8762:214;;:::o;4479:1022:14:-;4734:18;4787:22;4850:17;4552:38;4574:5;4581:8;4552:21;:38::i;:::-;4755:16;:26;4772:8;4755:26;;;;;;;;;;;;4734:47;;4812:32;4842:1;4812:11;:18;4824:5;4812:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;4787:57;;4870:11;:18;4882:5;4870:18;;;;;;;;;;;;;;;4889:14;4870:34;;;;;;;;;;;;;;;;;;4850:54;;4944:9;4911:11;:18;4923:5;4911:18;;;;;;;;;;;;;;;4930:10;4911:30;;;;;;;;;;;;;;;;;:42;;;;5031:11;:18;5043:5;5031:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5449:1;5420:16;:26;5437:8;5420:26;;;;;;;;;;;:30;;;;5486:10;5456:16;:27;5473:9;5456:27;;;;;;;;;;;:40;;;;4479:1022;;;;;:::o;3974:226::-;4077:14;4040:31;4057:3;4062:8;4040:16;:31::i;:::-;4094:11;:16;4106:3;4094:16;;;;;;;;;;;;;;;:23;;;;4077:40;;4123:11;:16;4135:3;4123:16;;;;;;;;;;;;;;;4145:8;4123:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4123:31:14;;;;;;;;;;;;;;;;;;;;;;4189:6;4160:16;:26;4177:8;4160:26;;;;;;;;;;;:35;;;;3974:226;;;:::o;1388:420:4:-;1437:6;1489;1510:8;1607:17;1652:6;1465:1;1460;:6;1456:22;;;1468:10;;;;;;;;;;;;;;;;;;;;;;1456:22;1498:1;1489:10;;1529:68;1541:1;1536;:6;;1529:68;;;1558:5;;;;;;;1583:2;1578:7;;;;;;;;;;;1529:68;;;1637:3;1627:14;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1627:14:4;;;;1607:34;;1667:1;1661:3;:7;1652:16;;1679:92;1691:1;1686;:6;;1679:92;;;1734:2;1730:1;:6;;;;;;;;1725:2;:11;1720:17;;1708:4;1713:3;;;;;;;1708:9;;;;;;;;;;;;;;:29;;;;;;;;;;;1757:2;1752:7;;;;;;;;;;;1679:92;;;1795:4;1781:19;;1388:420;;;;;;;;:::o;132:810::-;229:6;246:16;283;320;357;394;431:19;536;579:6;603;271:2;246:28;;308:2;283:28;;345:2;320:28;;382:2;357:28;;419:2;394:28;;516:3;:10;503:3;:10;490:3;:10;477:3;:10;464:3;:10;:23;:36;:49;:62;453:74;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;453:74:4;;;;431:96;;564:5;536:34;;588:1;579:10;;612:1;603:10;;598:58;619:3;:10;615:1;:14;598:58;;;650:3;654:1;650:6;;;;;;;;;;;;;;;;;;;;636;643:3;;;;;;636:11;;;;;;;;;;;;;;:20;;;;;;;;;;;631:3;;;;;;;598:58;;;674:1;670:5;;665:53;681:3;:10;677:1;:14;665:53;;;712:3;716:1;712:6;;;;;;;;;;;;;;;;;;;;698;705:3;;;;;;698:11;;;;;;;;;;;;;;:20;;;;;;;;;;;693:3;;;;;;;665:53;;;736:1;732:5;;727:53;743:3;:10;739:1;:14;727:53;;;774:3;778:1;774:6;;;;;;;;;;;;;;;;;;;;760;767:3;;;;;;760:11;;;;;;;;;;;;;;:20;;;;;;;;;;;755:3;;;;;;;727:53;;;798:1;794:5;;789:53;805:3;:10;801:1;:14;789:53;;;836:3;840:1;836:6;;;;;;;;;;;;;;;;;;;;822;829:3;;;;;;822:11;;;;;;;;;;;;;;:20;;;;;;;;;;;817:3;;;;;;;789:53;;;860:1;856:5;;851:53;867:3;:10;863:1;:14;851:53;;;898:3;902:1;898:6;;;;;;;;;;;;;;;;;;;;884;891:3;;;;;;884:11;;;;;;;;;;;;;;:20;;;;;;;;;;;879:3;;;;;;;851:53;;;927:6;913:21;;132:810;;;;;;;;;;;;;;;;:::o;10442:347:12:-;10581:4;10649:13;10600:16;:3;:14;;;:16::i;:::-;10599:17;10595:49;;;10633:4;10626:11;;;;10595:49;10680:3;10665:36;;;10709:10;10721:5;10728:8;10738:5;10665:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10665:79:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10665:79:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10665:79:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10665:79:12;;;;;;;;;;;;;;;;10649:95;;712:10;10768:15;;10758:25;;;:6;:25;;;;10750:34;;10442:347;;;;;;;;:::o;4194:168::-;4300:4;4321:17;:25;4339:6;4321:25;;;;;;;;;;;;;;;:36;4347:9;4321:36;;;;;;;;;;;;;;;;;;;;;;;;;4314:43;;4194:168;;;;:::o;1512:171:9:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;9722:214:12:-;9824:5;9803:26;;:17;9811:8;9803:7;:17::i;:::-;:26;;;9795:35;;;;;;;;9862:30;9890:1;9862:16;:23;9879:5;9862:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;9836:16;:23;9853:5;9836:23;;;;;;;;;;;;;;;:56;;;;9929:1;9898:10;:20;9909:8;9898:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9722:214;;:::o;1060:116:8:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;9239:204:12:-;9345:1;9313:34;;:10;:20;9324:8;9313:20;;;;;;;;;;;;;;;;;;;;;:34;;;9305:43;;;;;;;;9377:3;9354:10;:20;9365:8;9354:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;9410:28;9436:1;9410:16;:21;9427:3;9410:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9386:16;:21;9403:3;9386:21;;;;;;;;;;;;;;;:52;;;;9239:204;;:::o;438:578:5:-;496:4;508:12;983:5;971:18;963:26;;1010:1;1003:4;:8;996:15;;438:578;;;;:::o;1238:128:8:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;484:1934:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"../node_modules/zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol\";\r\nimport \"../node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol\";\r\nimport \"./ProxyRegistry.sol\";\r\nimport \"./Strings.sol\";\r\n\r\n/**************************************************************\r\n* @title Cryptoticket\r\n* Description:\r\n* Cryptotickets are an ERC721 implementation for event tickets \r\n***************************************************************/\r\n\r\ncontract Cryptoticket is ERC721Token, Ownable {\r\n    using Strings for *;\r\n\r\n    address proxyRegistryAddress;\r\n\r\n    constructor(address _proxyRegistryAddress) ERC721Token(\"Cryptoticket\", \"CTKT\") public {\r\n        proxyRegistryAddress = _proxyRegistryAddress;\r\n    }\r\n\r\n    /***********************************************************\r\n    *@name: tokenURI\r\n    *@parameters: unique ticket ID (uint256), unique event ID (uint256)    \r\n    *Description: \r\n    *returns the URI for the related token metadata  (string)\r\n    ************************************************************/\r\n    function tokenURI(uint256 _tokenId, uint256 _eventId) public view returns (string){\r\n        return Strings.strConcat(baseTokenURI(), \"event=\", Strings.uint2str(_tokenId), \"ticket\", Strings.uint2str(_eventId));\r\n    }\r\n\r\n\r\n    /***********************************************************\r\n    *@name: baseTokenURI\r\n    *@parameters: NONE    \r\n    *Description: \r\n    *returns the base URI for the API endpoint (string)\r\n    ************************************************************/\r\n    function baseTokenURI() public view returns(string) {\r\n        return \"http://www.example.com/\";\r\n    }\r\n\r\n    /***********************************************************\r\n    *@name: isApprovedForAll\r\n    *@parameters: NONE    \r\n    *Description: \r\n    *Override isApprovedForAll to whitelist user's OpenSea proxy \r\n    *accounts to enable gas-less listings.\r\n    *returns boolean\r\n    ************************************************************/\r\n    function isApprovedForAll(address owner, address operator) public view returns(bool){\r\n        // Whitelist OpenSea proxy contract for easy trading.\r\n        ProxyRegistry proxyRegistry = ProxyRegistry(proxyRegistryAddress);\r\n        if(proxyRegistry.proxies(owner) == operator) {\r\n            return true;\r\n        }\r\n\r\n        return super.isApprovedForAll(owner, operator);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n",
  "sourcePath": "K:/code/cryptotickets/backend/contracts/Cryptotickets.sol",
  "ast": {
    "absolutePath": "/K/code/cryptotickets/backend/contracts/Cryptotickets.sol",
    "exportedSymbols": {
      "Cryptoticket": [
        94
      ]
    },
    "id": 95,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/K/code/cryptotickets/backend/node_modules/zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 1859,
        "src": "28:82:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/K/code/cryptotickets/backend/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 743,
        "src": "112:75:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/K/code/cryptotickets/backend/contracts/ProxyRegistry.sol",
        "file": "./ProxyRegistry.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 163,
        "src": "189:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/K/code/cryptotickets/backend/contracts/Strings.sol",
        "file": "./Strings.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 483,
        "src": "220:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1858,
              "src": "509:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1858",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "509:11:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 742,
              "src": "522:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$742",
                "typeString": "contract Ownable"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "522:7:0"
          }
        ],
        "contractDependencies": [
          511,
          562,
          742,
          769,
          789,
          796,
          918,
          1466,
          1858
        ],
        "contractKind": "contract",
        "documentation": "************************************************************\r\n@title Cryptoticket\r\nDescription:\r\nCryptotickets are an ERC721 implementation for event tickets \r**************************************************************",
        "fullyImplemented": true,
        "id": 94,
        "linearizedBaseContracts": [
          94,
          742,
          1858,
          796,
          789,
          769,
          1466,
          918,
          562,
          511
        ],
        "name": "Cryptoticket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "contractScope": null,
              "id": 10,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 482,
              "src": "543:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$482",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "537:20:0",
            "typeName": null
          },
          {
            "constant": false,
            "id": 13,
            "name": "proxyRegistryAddress",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "565:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "565:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "688:63:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "699:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23,
                      "name": "_proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "722:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "699:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "699:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "43727970746f7469636b6574",
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "657:14:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_01359ea3751bf0491754e68753c55d5631de2058c94bfa376bd92d0cc3f2fd4f",
                      "typeString": "literal_string \"Cryptoticket\""
                    },
                    "value": "Cryptoticket"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "43544b54",
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "673:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e529d57ebea5998066c5f19539236c1d3fbf1d2db0e9a93dffa1e30b2f0b400b",
                      "typeString": "literal_string \"CTKT\""
                    },
                    "value": "CTKT"
                  }
                ],
                "id": 20,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1858,
                  "src": "645:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1858_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "645:35:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "614:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "613:31:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:0:0"
            },
            "scope": 94,
            "src": "602:149:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "1156:135:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 38,
                          "name": "baseTokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1192:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view returns (string memory)"
                          }
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1192:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6576656e743d",
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1208:8:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28a08f07adc7444e478235d10a2d09dabf22166b4bb32e4dcc41d643e001ee27",
                          "typeString": "literal_string \"event=\""
                        },
                        "value": "event="
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 43,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1235:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 41,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "1218:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$482_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 481,
                          "src": "1218:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1218:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7469636b6574",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1246:8:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c6577c8e6054e86a5373fde13312de67f10594f1255db3831915bbc988fe94f",
                          "typeString": "literal_string \"ticket\""
                        },
                        "value": "ticket"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "_eventId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "1273:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "1256:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$482_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 481,
                          "src": "1256:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1256:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28a08f07adc7444e478235d10a2d09dabf22166b4bb32e4dcc41d643e001ee27",
                          "typeString": "literal_string \"event=\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c6577c8e6054e86a5373fde13312de67f10594f1255db3831915bbc988fe94f",
                          "typeString": "literal_string \"ticket\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "1174:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$482_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strConcat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 349,
                      "src": "1174:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory,string memory,string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:109:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 35,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "1167:116:0"
                }
              ]
            },
            "documentation": "*********************************************************\r\nname: tokenURI\r\nparameters: unique ticket ID (uint256), unique event ID (uint256)    \r\nescription: \r\neturns the URI for the related token metadata  (string)\r***********************************************************",
            "id": 53,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1092:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "_eventId",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1110:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1110:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1091:36:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1149:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1148:8:0"
            },
            "scope": 94,
            "src": "1074:217:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "1617:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "687474703a2f2f7777772e6578616d706c652e636f6d2f",
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1635:25:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b5e3cc035d22a4b720daef8dfc0ac5bea57569491266f2bc062a949e104d91dd",
                      "typeString": "literal_string \"http://www.example.com/\""
                    },
                    "value": "http://www.example.com/"
                  },
                  "functionReturnParameters": 57,
                  "id": 59,
                  "nodeType": "Return",
                  "src": "1628:32:0"
                }
              ]
            },
            "documentation": "*********************************************************\r\nname: baseTokenURI\r\nparameters: NONE    \r\nescription: \r\neturns the base URI for the API endpoint (string)\r***********************************************************",
            "id": 61,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "baseTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1586:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "1609:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1609:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1608:8:0"
            },
            "scope": 94,
            "src": "1565:103:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "2104:299:0",
              "statements": [
                {
                  "assignments": [
                    71
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "name": "proxyRegistry",
                      "nodeType": "VariableDeclaration",
                      "scope": 93,
                      "src": "2178:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ProxyRegistry_$162",
                        "typeString": "contract ProxyRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 70,
                        "name": "ProxyRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 162,
                        "src": "2178:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProxyRegistry_$162",
                          "typeString": "contract ProxyRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "proxyRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2222:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72,
                      "name": "ProxyRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "2208:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ProxyRegistry_$162_$",
                        "typeString": "type(contract ProxyRegistry)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2208:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProxyRegistry_$162",
                      "typeString": "contract ProxyRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2178:65:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2279:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "proxyRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "2257:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ProxyRegistry_$162",
                            "typeString": "contract ProxyRegistry"
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proxies",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 161,
                        "src": "2257:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_OwnableDelegateProxy_$154_$",
                          "typeString": "function (address) view external returns (contract OwnableDelegateProxy)"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2257:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OwnableDelegateProxy_$154",
                        "typeString": "contract OwnableDelegateProxy"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2289:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2257:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 85,
                  "nodeType": "IfStatement",
                  "src": "2254:83:0",
                  "trueBody": {
                    "id": 84,
                    "nodeType": "Block",
                    "src": "2299:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2321:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 69,
                        "id": 83,
                        "nodeType": "Return",
                        "src": "2314:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "2379:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "2386:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1917,
                        "src": "2356:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Cryptoticket_$94",
                          "typeString": "contract super Cryptoticket"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isApprovedForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1136,
                      "src": "2356:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view returns (bool)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2356:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 69,
                  "id": 91,
                  "nodeType": "Return",
                  "src": "2349:46:0"
                }
              ]
            },
            "documentation": "*********************************************************\r\nname: isApprovedForAll\r\nparameters: NONE    \r\nescription: \r\nverride isApprovedForAll to whitelist user's OpenSea proxy \r\nccounts to enable gas-less listings.\r\neturns boolean\r***********************************************************",
            "id": 93,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "2046:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2046:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "2061:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2045:33:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "2099:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2099:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2098:6:0"
            },
            "scope": 94,
            "src": "2020:383:0",
            "stateMutability": "view",
            "superFunction": 1136,
            "visibility": "public"
          }
        ],
        "scope": 95,
        "src": "484:1934:0"
      }
    ],
    "src": "0:2424:0"
  },
  "legacyAST": {
    "absolutePath": "/K/code/cryptotickets/backend/contracts/Cryptotickets.sol",
    "exportedSymbols": {
      "Cryptoticket": [
        94
      ]
    },
    "id": 95,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/K/code/cryptotickets/backend/node_modules/zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 1859,
        "src": "28:82:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/K/code/cryptotickets/backend/node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 743,
        "src": "112:75:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/K/code/cryptotickets/backend/contracts/ProxyRegistry.sol",
        "file": "./ProxyRegistry.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 163,
        "src": "189:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/K/code/cryptotickets/backend/contracts/Strings.sol",
        "file": "./Strings.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 483,
        "src": "220:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1858,
              "src": "509:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1858",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "509:11:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 742,
              "src": "522:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$742",
                "typeString": "contract Ownable"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "522:7:0"
          }
        ],
        "contractDependencies": [
          511,
          562,
          742,
          769,
          789,
          796,
          918,
          1466,
          1858
        ],
        "contractKind": "contract",
        "documentation": "************************************************************\r\n@title Cryptoticket\r\nDescription:\r\nCryptotickets are an ERC721 implementation for event tickets \r**************************************************************",
        "fullyImplemented": true,
        "id": 94,
        "linearizedBaseContracts": [
          94,
          742,
          1858,
          796,
          789,
          769,
          1466,
          918,
          562,
          511
        ],
        "name": "Cryptoticket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "contractScope": null,
              "id": 10,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 482,
              "src": "543:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$482",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "537:20:0",
            "typeName": null
          },
          {
            "constant": false,
            "id": 13,
            "name": "proxyRegistryAddress",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "565:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "565:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "688:63:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "699:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23,
                      "name": "_proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "722:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "699:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "699:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "43727970746f7469636b6574",
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "657:14:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_01359ea3751bf0491754e68753c55d5631de2058c94bfa376bd92d0cc3f2fd4f",
                      "typeString": "literal_string \"Cryptoticket\""
                    },
                    "value": "Cryptoticket"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "43544b54",
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "673:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e529d57ebea5998066c5f19539236c1d3fbf1d2db0e9a93dffa1e30b2f0b400b",
                      "typeString": "literal_string \"CTKT\""
                    },
                    "value": "CTKT"
                  }
                ],
                "id": 20,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1858,
                  "src": "645:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1858_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "645:35:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "614:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "613:31:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:0:0"
            },
            "scope": 94,
            "src": "602:149:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "1156:135:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 38,
                          "name": "baseTokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1192:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view returns (string memory)"
                          }
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1192:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6576656e743d",
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1208:8:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28a08f07adc7444e478235d10a2d09dabf22166b4bb32e4dcc41d643e001ee27",
                          "typeString": "literal_string \"event=\""
                        },
                        "value": "event="
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 43,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1235:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 41,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "1218:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$482_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 481,
                          "src": "1218:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1218:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7469636b6574",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1246:8:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c6577c8e6054e86a5373fde13312de67f10594f1255db3831915bbc988fe94f",
                          "typeString": "literal_string \"ticket\""
                        },
                        "value": "ticket"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "_eventId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "1273:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 46,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "1256:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$482_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 481,
                          "src": "1256:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1256:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28a08f07adc7444e478235d10a2d09dabf22166b4bb32e4dcc41d643e001ee27",
                          "typeString": "literal_string \"event=\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c6577c8e6054e86a5373fde13312de67f10594f1255db3831915bbc988fe94f",
                          "typeString": "literal_string \"ticket\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 36,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "1174:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$482_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strConcat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 349,
                      "src": "1174:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory,string memory,string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:109:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 35,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "1167:116:0"
                }
              ]
            },
            "documentation": "*********************************************************\r\nname: tokenURI\r\nparameters: unique ticket ID (uint256), unique event ID (uint256)    \r\nescription: \r\neturns the URI for the related token metadata  (string)\r***********************************************************",
            "id": 53,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1092:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "_eventId",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1110:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1110:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1091:36:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1149:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1148:8:0"
            },
            "scope": 94,
            "src": "1074:217:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "1617:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "687474703a2f2f7777772e6578616d706c652e636f6d2f",
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1635:25:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b5e3cc035d22a4b720daef8dfc0ac5bea57569491266f2bc062a949e104d91dd",
                      "typeString": "literal_string \"http://www.example.com/\""
                    },
                    "value": "http://www.example.com/"
                  },
                  "functionReturnParameters": 57,
                  "id": 59,
                  "nodeType": "Return",
                  "src": "1628:32:0"
                }
              ]
            },
            "documentation": "*********************************************************\r\nname: baseTokenURI\r\nparameters: NONE    \r\nescription: \r\neturns the base URI for the API endpoint (string)\r***********************************************************",
            "id": 61,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "baseTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1586:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "1609:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1609:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1608:8:0"
            },
            "scope": 94,
            "src": "1565:103:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "2104:299:0",
              "statements": [
                {
                  "assignments": [
                    71
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "name": "proxyRegistry",
                      "nodeType": "VariableDeclaration",
                      "scope": 93,
                      "src": "2178:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ProxyRegistry_$162",
                        "typeString": "contract ProxyRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 70,
                        "name": "ProxyRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 162,
                        "src": "2178:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProxyRegistry_$162",
                          "typeString": "contract ProxyRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "proxyRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2222:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72,
                      "name": "ProxyRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "2208:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ProxyRegistry_$162_$",
                        "typeString": "type(contract ProxyRegistry)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2208:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProxyRegistry_$162",
                      "typeString": "contract ProxyRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2178:65:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "2279:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "proxyRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "2257:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ProxyRegistry_$162",
                            "typeString": "contract ProxyRegistry"
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proxies",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 161,
                        "src": "2257:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_OwnableDelegateProxy_$154_$",
                          "typeString": "function (address) view external returns (contract OwnableDelegateProxy)"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2257:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OwnableDelegateProxy_$154",
                        "typeString": "contract OwnableDelegateProxy"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2289:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2257:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 85,
                  "nodeType": "IfStatement",
                  "src": "2254:83:0",
                  "trueBody": {
                    "id": 84,
                    "nodeType": "Block",
                    "src": "2299:38:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2321:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 69,
                        "id": 83,
                        "nodeType": "Return",
                        "src": "2314:11:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "2379:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "2386:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1917,
                        "src": "2356:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Cryptoticket_$94",
                          "typeString": "contract super Cryptoticket"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isApprovedForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1136,
                      "src": "2356:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view returns (bool)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2356:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 69,
                  "id": 91,
                  "nodeType": "Return",
                  "src": "2349:46:0"
                }
              ]
            },
            "documentation": "*********************************************************\r\nname: isApprovedForAll\r\nparameters: NONE    \r\nescription: \r\nverride isApprovedForAll to whitelist user's OpenSea proxy \r\nccounts to enable gas-less listings.\r\neturns boolean\r***********************************************************",
            "id": 93,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "2046:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2046:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "2061:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2045:33:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "2099:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2099:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2098:6:0"
            },
            "scope": 94,
            "src": "2020:383:0",
            "stateMutability": "view",
            "superFunction": 1136,
            "visibility": "public"
          }
        ],
        "scope": 95,
        "src": "484:1934:0"
      }
    ],
    "src": "0:2424:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-03T00:08:25.827Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "_to": "address to be approved for the given token ID",
          "_tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "_owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "exists(uint256)": {
        "details": "Returns whether the specified token exists",
        "params": {
          "_tokenId": "uint256 ID of the token to query the existence of"
        },
        "return": "whether the token exists"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set",
        "params": {
          "_tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "_tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.   * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "_approved": "representing the status of the approval to be set",
          "_to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "_index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "_index": "uint256 representing the index to be accessed of the requested tokens list",
          "_owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "_tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Cryptoticket\r Description:\r Cryptotickets are an ERC721 implementation for event tickets \r**************************************************************"
  },
  "userdoc": {
    "methods": {
      "baseTokenURI()": {
        "notice": "*********************************************************\r name: baseTokenURI\r parameters: NONE    \r escription: \r eturns the base URI for the API endpoint (string)\r***********************************************************"
      },
      "isApprovedForAll(address,address)": {
        "notice": "*********************************************************\r name: isApprovedForAll\r parameters: NONE    \r escription: \r verride isApprovedForAll to whitelist user's OpenSea proxy \r ccounts to enable gas-less listings.\r eturns boolean\r***********************************************************"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "tokenURI(uint256,uint256)": {
        "notice": "*********************************************************\r name: tokenURI\r parameters: unique ticket ID (uint256), unique event ID (uint256)    \r escription: \r eturns the URI for the related token metadata  (string)\r***********************************************************"
      }
    }
  }
}