{
  "contractName": "Cryptotickets",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "InterfaceId_ERC165",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_proxyRegistryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160208062002c9d833981018060405281019080805190602001909291905050506040805190810160405280600c81526020017f43727970746f7469636b657400000000000000000000000000000000000000008152506040805190810160405280600481526020017f43544b5400000000000000000000000000000000000000000000000000000000815250828282620000e16301ffc9a77c010000000000000000000000000000000000000000000000000000000002620002d6640100000000026401000000009004565b6200011e6380ac58cd7c010000000000000000000000000000000000000000000000000000000002620002d6640100000000026401000000009004565b6200015b634f558e797c010000000000000000000000000000000000000000000000000000000002620002d6640100000000026401000000009004565b81600590805190602001906200017392919062000394565b5080600690805190602001906200018c92919062000394565b50620001ca63780e9d637c010000000000000000000000000000000000000000000000000000000002620002d6640100000000026401000000009004565b62000207635b5e139f7c010000000000000000000000000000000000000000000000000000000002620002d6640100000000026401000000009004565b505033600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505080600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000443565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200032857600080fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003d757805160ff191683800117855562000408565b8280016001018555821562000408579182015b8281111562000407578251825591602001919060010190620003ea565b5b5090506200041791906200041b565b5090565b6200044091905b808211156200043c57600081600090555060010162000422565b5090565b90565b61284a80620004536000396000f300608060405260043610610133576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461013857806306fdde031461019c578063081812fc1461022c578063095ea7b31461029957806318160ddd146102e657806319fa8f501461031157806323b872dd1461037a5780632f745c59146103e757806342842e0e146104485780634f558e79146104b55780634f6ccce7146104fa5780636352211e1461053b57806370a08231146105a8578063715018a6146105ff578063755edd17146106165780638da5cb5b1461065957806395d89b41146106b0578063a22cb46514610740578063b88d4fde1461078f578063c87b56dd14610842578063d547cfb7146108e8578063e985e9c514610978578063f2fde38b146109f3575b600080fd5b34801561014457600080fd5b5061018260048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610a36565b604051808215151515815260200191505060405180910390f35b3480156101a857600080fd5b506101b1610a9d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f15780820151818401526020810190506101d6565b50505050905090810190601f16801561021e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023857600080fd5b5061025760048036038101908080359060200190929190505050610b3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102a557600080fd5b506102e4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b7c565b005b3480156102f257600080fd5b506102fb610cc1565b6040518082815260200191505060405180910390f35b34801561031d57600080fd5b50610326610cce565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561038657600080fd5b506103e5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cf5565b005b3480156103f357600080fd5b50610432600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e00565b6040518082815260200191505060405180910390f35b34801561045457600080fd5b506104b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e77565b005b3480156104c157600080fd5b506104e060048036038101908080359060200190929190505050610e98565b604051808215151515815260200191505060405180910390f35b34801561050657600080fd5b5061052560048036038101908080359060200190929190505050610f0a565b6040518082815260200191505060405180910390f35b34801561054757600080fd5b5061056660048036038101908080359060200190929190505050610f42565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b457600080fd5b506105e9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc0565b6040518082815260200191505060405180910390f35b34801561060b57600080fd5b50610614611044565b005b34801561062257600080fd5b50610657600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611149565b005b34801561066557600080fd5b5061066e6111bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106bc57600080fd5b506106c56111e5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107055780820151818401526020810190506106ea565b50505050905090810190601f1680156107325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561074c57600080fd5b5061078d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611287565b005b34801561079b57600080fd5b50610840600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506113c3565b005b34801561084e57600080fd5b5061086d600480360381019080803590602001909291905050506113eb565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108ad578082015181840152602081019050610892565b50505050905090810190601f1680156108da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156108f457600080fd5b506108fd61140d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561093d578082015181840152602081019050610922565b50505050905090810190601f16801561096a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561098457600080fd5b506109d9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611497565b604051808215151515815260200191505060405180910390f35b3480156109ff57600080fd5b50610a34600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115e5565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b355780601f10610b0a57610100808354040283529160200191610b35565b820191906000526020600020905b815481529060010190602001808311610b1857829003601f168201915b5050505050905090565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b8782610f42565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610bc457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c045750610c038133611497565b5b1515610c0f57600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600980549050905090565b6301ffc9a77c01000000000000000000000000000000000000000000000000000000000281565b610cff338261164d565b1515610d0a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610d4657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d8257600080fd5b610d8c83826116e2565b610d9683826117e5565b610da082826119a1565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000610e0b83610fc0565b82101515610e1857600080fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610e6457fe5b9060005260206000200154905092915050565b610e9383838360206040519081016040528060008152506113c3565b505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000610f14610cc1565b82101515610f2157600080fd5b600982815481101515610f3057fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610fb757600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610ffd57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110a057600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111a757600080fd5b6111af611a78565b90506111bb8282611a9a565b5050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561127d5780601f106112525761010080835404028352916020019161127d565b820191906000526020600020905b81548152906001019060200180831161126057829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156112c257600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6113ce848484610cf5565b6113da84848484611af1565b15156113e557600080fd5b50505050565b60606114066113f861140d565b61140184611d13565b611e6a565b9050919050565b6060608060405190810160405280604d81526020017f68747470733a2f2f6e7565667771736476332e657865637574652d6170692e7581526020017f732d656173742d312e616d617a6f6e6177732e636f6d2f74657374696e672f6381526020017f727970746f7469636b6574732f00000000000000000000000000000000000000815250905090565b600080600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663c4552791866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561157157600080fd5b505af1158015611585573d6000803e3d6000fd5b505050506040513d602081101561159b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614156115d157600191506115de565b6115db8484611eb1565b91505b5092915050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561164157600080fd5b61164a81611f45565b50565b60008061165983610f42565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806116c857508373ffffffffffffffffffffffffffffffffffffffff166116b084610b3f565b73ffffffffffffffffffffffffffffffffffffffff16145b806116d957506116d88185611497565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff1661170282610f42565b73ffffffffffffffffffffffffffffffffffffffff1614151561172457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156117e15760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b60008060006117f48585612041565b600860008581526020019081526020016000205492506118606001600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061217090919063ffffffff16565b9150600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156118ae57fe5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110151561190857fe5b9060005260206000200181905550600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361196891906127cd565b50600060086000868152602001908152602001600020819055508260086000838152602001908152602001600020819055505050505050565b60006119ad8383612189565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806008600084815260200190815260200160002081905550505050565b6000611a956001611a87610cc1565b6122e390919063ffffffff16565b905090565b611aa482826122ff565b600980549050600a60008381526020019081526020016000208190555060098190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080611b138573ffffffffffffffffffffffffffffffffffffffff166123a5565b1515611b225760019150611d0a565b8473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611c17578082015181840152602081019050611bfc565b50505050905090810190601f168015611c445780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611c6657600080fd5b505af1158015611c7a573d6000803e3d6000fd5b505050506040513d6020811015611c9057600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b60606000806060600080861415611d61576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509450611e61565b8593505b600084141515611d8b578280600101935050600a84811515611d8357fe5b049350611d65565b826040519080825280601f01601f191660200182016040528015611dbe5781602001602082028038833980820191505090505b5091506001830390505b600086141515611e5d57600a86811515611dde57fe5b066030017f010000000000000000000000000000000000000000000000000000000000000002828280600190039350815181101515611e1957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515611e5557fe5b049550611dc8565b8194505b50505050919050565b6060611ea983836020604051908101604052806000815250602060405190810160405280600081525060206040519081016040528060008152506123b8565b905092915050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611f8157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8173ffffffffffffffffffffffffffffffffffffffff1661206182610f42565b73ffffffffffffffffffffffffffffffffffffffff1614151561208357600080fd5b6120d66001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461217090919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115151561217e57fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156121f757600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061229c6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546122e390919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600081830190508281101515156122f657fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561233b57600080fd5b61234582826119a1565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080823b905060008111915050919050565b6060806060806060806060806000808e98508d97508c96508b95508a94508451865188518a518c51010101016040519080825280601f01601f1916602001820160405280156124165781602001602082028038833980820191505090505b50935083925060009150600090505b88518110156124d857888181518110151561243c57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561249b57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612425565b600090505b87518110156125905787818151811015156124f457fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561255357fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506124dd565b600090505b86518110156126485786818151811015156125ac57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561260b57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612595565b600090505b855181101561270057858181518110151561266457fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156126c357fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061264d565b600090505b84518110156127b857848181518110151561271c57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561277b57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612705565b82995050505050505050505095945050505050565b8154818355818111156127f4578183600052602060002091820191016127f391906127f9565b5b505050565b61281b91905b808211156128175760008160009055506001016127ff565b5090565b905600a165627a7a723058201b7873956f1c8cb32aec187561da3cbdf3f585f486650ed24cab67ca190822c80029",
  "deployedBytecode": "",
  "sourceMap": "349:721:0:-;;;463:179;8:9:-1;5:2;;;30:1;27;20:12;5:2;463:179:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;509:163:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:21:0;594:5:7;601:7;649:38:11;274:10;668:18;;649;;;:38;;;:::i;:::-;1258::16;293:10:15;1277:18:16;;1258;;;:38;;;:::i;:::-;1302:44;935:10:15;1321:24:16;;1302:18;;;:44;;;:::i;:::-;1229:5:18;1221;:13;;;;;;;;;;;;:::i;:::-;;1250:7;1240;:17;;;;;;;;;;;;:::i;:::-;;1337:48;1081:10:15;1356:28:18;;1337:18;;;:48;;;:::i;:::-;1391:46;1343:10:15;1410:26:18;;1391:18;;;:46;;;:::i;:::-;1166:276;;575:10:13;567:5;;:18;;;;;;;;;;;;;;;;;;646:21:7;623:20;;:44;;;;;;;;;;;;;;;;;;509:163;;;614:21:0;591:20;;:44;;;;;;;;;;;;;;;;;;463:179;349:721;;987:156:11;1081:10;1065:26;;:12;:26;;;;;1057:35;;;;;;;;1134:4;1098:19;:33;1118:12;1098:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;987:156;:::o;349:721:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "349:721:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:142:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;775:142:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1536:70:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1536:70:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1536:70:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3289:111:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3289:111:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2785:277;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2785:277:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2805:87:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2805:87:18;;;;;;;;;;;;;;;;;;;;;;;230:54:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;230:54:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4780:370:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4780:370:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:203:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2460:203:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5766:199:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5766:199:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2240:140:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3216::18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3216:140:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1898:164:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1898:164:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1543:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1543:142:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:13;;;;;;803:123:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;803:123:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:13;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:74:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1704:74:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1704:74:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3680:205:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3680:205:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6647:276;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6647:276:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1225:166:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1225:166:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1225:166:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:155:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;907:155:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;907:155:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1510:378:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1510:378:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:142:11;858:4;879:19;:33;899:12;879:33;;;;;;;;;;;;;;;;;;;;;;;;;;;872:40;;775:142;;;:::o;1536:70:18:-;1575:6;1596:5;1589:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1536:70;:::o;3289:111:16:-;3349:7;3371:14;:24;3386:8;3371:24;;;;;;;;;;;;;;;;;;;;;3364:31;;3289:111;;;:::o;2785:277::-;2846:13;2862:17;2870:8;2862:7;:17::i;:::-;2846:33;;2900:5;2893:12;;:3;:12;;;;2885:21;;;;;;;;2934:5;2920:19;;:10;:19;;;:58;;;;2943:35;2960:5;2967:10;2943:16;:35::i;:::-;2920:58;2912:67;;;;;;;;3013:3;2986:14;:24;3001:8;2986:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3048:8;3043:3;3027:30;;3036:5;3027:30;;;;;;;;;;;;2785:277;;;:::o;2805:87:18:-;2849:7;2871:9;:16;;;;2864:23;;2805:87;:::o;230:54:11:-;274:10;230:54;;;:::o;4780:370:16:-;4891:39;4909:10;4921:8;4891:17;:39::i;:::-;4883:48;;;;;;;;4962:1;4945:19;;:5;:19;;;;4937:28;;;;;;;;4994:1;4979:17;;:3;:17;;;;4971:26;;;;;;;;5004:30;5018:5;5025:8;5004:13;:30::i;:::-;5040:32;5056:5;5063:8;5040:15;:32::i;:::-;5078:25;5089:3;5094:8;5078:10;:25::i;:::-;5136:8;5131:3;5115:30;;5124:5;5115:30;;;;;;;;;;;;4780:370;;;:::o;2460:203:18:-;2566:7;2600:17;2610:6;2600:9;:17::i;:::-;2591:6;:26;2583:35;;;;;;;;2631:11;:19;2643:6;2631:19;;;;;;;;;;;;;;;2651:6;2631:27;;;;;;;;;;;;;;;;;;2624:34;;2460:203;;;;:::o;5766:199:16:-;5918:42;5935:5;5942:3;5947:8;5918:42;;;;;;;;;;;;;:16;:42::i;:::-;5766:199;;;:::o;2240:140::-;2295:4;2307:13;2323:10;:20;2334:8;2323:20;;;;;;;;;;;;;;;;;;;;;2307:36;;2373:1;2356:19;;:5;:19;;;;2349:26;;2240:140;;;;:::o;3216::18:-;3275:7;3307:13;:11;:13::i;:::-;3298:6;:22;3290:31;;;;;;;;3334:9;3344:6;3334:17;;;;;;;;;;;;;;;;;;3327:24;;3216:140;;;:::o;1898:164:16:-;1954:7;1969:13;1985:10;:20;1996:8;1985:20;;;;;;;;;;;;;;;;;;;;;1969:36;;2036:1;2019:19;;:5;:19;;;;2011:28;;;;;;;;2052:5;2045:12;;1898:164;;;;:::o;1543:142::-;1599:7;1640:1;1622:20;;:6;:20;;;;1614:29;;;;;;;;1656:16;:24;1673:6;1656:24;;;;;;;;;;;;;;;;1649:31;;1543:142;;;:::o;1001:111:13:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;803:123:7:-;855:18;719:5:13;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;876:17:7;:15;:17::i;:::-;855:38;;899:22;905:3;910:10;899:5;:22::i;:::-;803:123;;:::o;238:20:13:-;;;;;;;;;;;;;:::o;1704:74:18:-;1745:6;1766:7;1759:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:74;:::o;3680:205:16:-;3764:10;3757:17;;:3;:17;;;;3749:26;;;;;;;;3818:9;3781:17;:29;3799:10;3781:29;;;;;;;;;;;;;;;:34;3811:3;3781:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;3865:3;3838:42;;3853:10;3838:42;;;3870:9;3838:42;;;;;;;;;;;;;;;;;;;;;;3680:205;;:::o;6647:276::-;6771:34;6784:5;6791:3;6796:8;6771:12;:34::i;:::-;6864:53;6889:5;6896:3;6901:8;6911:5;6864:24;:53::i;:::-;6856:62;;;;;;;;6647:276;;;;:::o;1225:166:7:-;1282:6;1303:83;1330:14;:12;:14::i;:::-;1354:26;1371:8;1354:16;:26::i;:::-;1303:17;:83::i;:::-;1296:90;;1225:166;;;:::o;907:155:0:-;951:6;969:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:155;:::o;1510:378:7:-;1614:4;1686:27;1730:20;;;;;;;;;;;1686:65;;1793:8;1761:40;;:13;:21;;;1783:5;1761:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1761:28:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1761:28:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1761:28:7;;;;;;;;;;;;;;;;:40;;;1757:74;;;1820:4;1813:11;;;;1757:74;1844:39;1867:5;1874:8;1844:22;:39::i;:::-;1837:46;;1510:378;;;;;;:::o;1274:103:13:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;7270:438:16:-;7380:4;7394:13;7410:17;7418:8;7410:7;:17::i;:::-;7394:33;;7606:5;7594:17;;:8;:17;;;:60;;;;7646:8;7621:33;;:21;7633:8;7621:11;:21::i;:::-;:33;;;7594:60;:103;;;;7664:33;7681:5;7688:8;7664:16;:33::i;:::-;7594:103;7579:124;;7270:438;;;;;:::o;8762:214::-;8863:6;8842:27;;:17;8850:8;8842:7;:17::i;:::-;:27;;;8834:36;;;;;;;;8916:1;8880:38;;:14;:24;8895:8;8880:24;;;;;;;;;;;;;;;;;;;;;:38;;;;8876:96;;;8963:1;8928:14;:24;8943:8;8928:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8876:96;8762:214;;:::o;4479:1022:18:-;4734:18;4787:22;4850:17;4552:38;4574:5;4581:8;4552:21;:38::i;:::-;4755:16;:26;4772:8;4755:26;;;;;;;;;;;;4734:47;;4812:32;4842:1;4812:11;:18;4824:5;4812:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;4787:57;;4870:11;:18;4882:5;4870:18;;;;;;;;;;;;;;;4889:14;4870:34;;;;;;;;;;;;;;;;;;4850:54;;4944:9;4911:11;:18;4923:5;4911:18;;;;;;;;;;;;;;;4930:10;4911:30;;;;;;;;;;;;;;;;;:42;;;;5031:11;:18;5043:5;5031:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5449:1;5420:16;:26;5437:8;5420:26;;;;;;;;;;;:30;;;;5486:10;5456:16;:27;5473:9;5456:27;;;;;;;;;;;:40;;;;4479:1022;;;;;:::o;3974:226::-;4077:14;4040:31;4057:3;4062:8;4040:16;:31::i;:::-;4094:11;:16;4106:3;4094:16;;;;;;;;;;;;;;;:23;;;;4077:40;;4123:11;:16;4135:3;4123:16;;;;;;;;;;;;;;;4145:8;4123:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4123:31:18;;;;;;;;;;;;;;;;;;;;;;4189:6;4160:16;:26;4177:8;4160:26;;;;;;;;;;;:35;;;;3974:226;;;:::o;1048:96:7:-;1097:7;1119:20;1137:1;1119:13;:11;:13::i;:::-;:17;;:20;;;;:::i;:::-;1112:27;;1048:96;:::o;5762:172:18:-;5823:26;5835:3;5840:8;5823:11;:26::i;:::-;5883:9;:16;;;;5856:14;:24;5871:8;5856:24;;;;;;;;;;;:43;;;;5905:9;5920:8;5905:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5905:24:18;;;;;;;;;;;;;;;;;;;;;;5762:172;;:::o;10442:347:16:-;10581:4;10649:13;10600:16;:3;:14;;;:16::i;:::-;10599:17;10595:49;;;10633:4;10626:11;;;;10595:49;10680:3;10665:36;;;10709:10;10721:5;10728:8;10738:5;10665:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10665:79:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10665:79:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10665:79:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10665:79:16;;;;;;;;;;;;;;;;10649:95;;712:10;10768:15;;10758:25;;;:6;:25;;;;10750:34;;10442:347;;;;;;;;:::o;1355:405:5:-;1404:6;1454;1474:8;1566:17;1610:6;1431:1;1426;:6;1422:22;;;1434:10;;;;;;;;;;;;;;;;;;;;;;1422:22;1463:1;1454:10;;1492:65;1504:1;1499;:6;;1492:65;;;1520:5;;;;;;;1544:2;1539:7;;;;;;;;;;;1492:65;;;1596:3;1586:14;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1586:14:5;;;;1566:34;;1625:1;1619:3;:7;1610:16;;1636:89;1648:1;1643;:6;;1636:89;;;1690:2;1686:1;:6;;;;;;;;1681:2;:11;1676:17;;1664:4;1669:3;;;;;;;1664:9;;;;;;;;;;;;;;:29;;;;;;;;;;;1712:2;1707:7;;;;;;;;;;;1636:89;;;1748:4;1734:19;;1355:405;;;;;;;;:::o;1224:125::-;1288:6;1313:29;1323:2;1327;1313:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;1306:36;;1224:125;;;;:::o;4194:168:16:-;4300:4;4321:17;:25;4339:6;4321:25;;;;;;;;;;;;;;;:36;4347:9;4321:36;;;;;;;;;;;;;;;;;;;;;;;;;4314:43;;4194:168;;;;:::o;1512:171:13:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;9722:214:16:-;9824:5;9803:26;;:17;9811:8;9803:7;:17::i;:::-;:26;;;9795:35;;;;;;;;9862:30;9890:1;9862:16;:23;9879:5;9862:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;9836:16;:23;9853:5;9836:23;;;;;;;;;;;;;;;:56;;;;9929:1;9898:10;:20;9909:8;9898:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9722:214;;:::o;1060:116:12:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;9239:204:16:-;9345:1;9313:34;;:10;:20;9324:8;9313:20;;;;;;;;;;;;;;;;;;;;;:34;;;9305:43;;;;;;;;9377:3;9354:10;:20;9365:8;9354:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;9410:28;9436:1;9410:16;:21;9427:3;9410:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9386:16;:21;9403:3;9386:21;;;;;;;;;;;;;;;:52;;;;9239:204;;:::o;1238:128:12:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;7957:169:16:-;8041:1;8026:17;;:3;:17;;;;8018:26;;;;;;;;8050:25;8061:3;8066:8;8050:10;:25::i;:::-;8112:8;8107:3;8086:35;;8103:1;8086:35;;;;;;;;;;;;7957:169;;:::o;438:578:9:-;496:4;508:12;983:5;971:18;963:26;;1010:1;1003:4;:8;996:15;;438:578;;;;:::o;128:795:5:-;225:6;241:16;277;313;349;385;421:19;525;567:6;590;266:2;241:28;;302:2;277:28;;338:2;313:28;;374:2;349:28;;410:2;385:28;;506:3;:10;493:3;:10;480:3;:10;467:3;:10;454:3;:10;:23;:36;:49;:62;443:74;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;443:74:5;;;;421:96;;553:5;525:34;;576:1;567:10;;599:1;590:10;;585:58;606:3;:10;602:1;:14;585:58;;;637:3;641:1;637:6;;;;;;;;;;;;;;;;;;;;623;630:3;;;;;;623:11;;;;;;;;;;;;;;:20;;;;;;;;;;;618:3;;;;;;;585:58;;;660:1;656:5;;651:53;667:3;:10;663:1;:14;651:53;;;698:3;702:1;698:6;;;;;;;;;;;;;;;;;;;;684;691:3;;;;;;684:11;;;;;;;;;;;;;;:20;;;;;;;;;;;679:3;;;;;;;651:53;;;721:1;717:5;;712:53;728:3;:10;724:1;:14;712:53;;;759:3;763:1;759:6;;;;;;;;;;;;;;;;;;;;745;752:3;;;;;;745:11;;;;;;;;;;;;;;:20;;;;;;;;;;;740:3;;;;;;;712:53;;;782:1;778:5;;773:53;789:3;:10;785:1;:14;773:53;;;820:3;824:1;820:6;;;;;;;;;;;;;;;;;;;;806;813:3;;;;;;806:11;;;;;;;;;;;;;;:20;;;;;;;;;;;801:3;;;;;;;773:53;;;843:1;839:5;;834:53;850:3;:10;846:1;:14;834:53;;;881:3;885:1;881:6;;;;;;;;;;;;;;;;;;;;867;874:3;;;;;;867:11;;;;;;;;;;;;;;:20;;;;;;;;;;;862:3;;;;;;;834:53;;;909:6;895:21;;128:795;;;;;;;;;;;;;;;;:::o;349:721:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./TradeableERC721Token.sol\";\nimport \"./ProxyRegistry.sol\";\nimport \"./Strings.sol\";\n\n/**************************************************************\n* @title Cryptoticket\n* Description:\n* Cryptotickets are an ERC721 implementation for event tickets \n***************************************************************/\n\ncontract Cryptotickets is TradeableERC721Token {\n    using Strings for *;\n\n    address proxyRegistryAddress;\n\n    constructor(address _proxyRegistryAddress) TradeableERC721Token(\"Cryptoticket\", \"CTKT\", _proxyRegistryAddress) public {\n        proxyRegistryAddress = _proxyRegistryAddress;\n    }\n\n\n    /***********************************************************\n    *@name: baseTokenURI\n    *@parameters: NONE    \n    *Description: \n    *returns the base URI for the API endpoint (string)\n    ************************************************************/\n    function baseTokenURI() public view returns(string) {\n        return \"https://nuefwqsdv3.execute-api.us-east-1.amazonaws.com/testing/cryptotickets/\";\n    }\n\n\n\n\n\n\n}\n\n\n",
  "sourcePath": "/Users/fboyd/Documents/projects/cryptotickets/backend/contracts/Cryptotickets.sol",
  "ast": {
    "absolutePath": "/Users/fboyd/Documents/projects/cryptotickets/backend/contracts/Cryptotickets.sol",
    "exportedSymbols": {
      "Cryptotickets": [
        34
      ]
    },
    "id": 35,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/fboyd/Documents/projects/cryptotickets/backend/contracts/TradeableERC721Token.sol",
        "file": "./TradeableERC721Token.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 35,
        "sourceUnit": 867,
        "src": "26:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/fboyd/Documents/projects/cryptotickets/backend/contracts/ProxyRegistry.sol",
        "file": "./ProxyRegistry.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 35,
        "sourceUnit": 147,
        "src": "63:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/fboyd/Documents/projects/cryptotickets/backend/contracts/Strings.sol",
        "file": "./Strings.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 35,
        "sourceUnit": 467,
        "src": "93:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "TradeableERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 866,
              "src": "375:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TradeableERC721Token_$866",
                "typeString": "contract TradeableERC721Token"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "375:20:0"
          }
        ],
        "contractDependencies": [
          866,
          1215,
          1266,
          1446,
          1473,
          1493,
          1500,
          1622,
          2170,
          2562
        ],
        "contractKind": "contract",
        "documentation": "************************************************************\n@title Cryptoticket\nDescription:\nCryptotickets are an ERC721 implementation for event tickets **************************************************************",
        "fullyImplemented": true,
        "id": 34,
        "linearizedBaseContracts": [
          34,
          866,
          1446,
          2562,
          1500,
          1493,
          1473,
          2170,
          1622,
          1266,
          1215
        ],
        "name": "Cryptotickets",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "contractScope": null,
              "id": 7,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 466,
              "src": "408:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$466",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "402:20:0",
            "typeName": null
          },
          {
            "constant": false,
            "id": 10,
            "name": "proxyRegistryAddress",
            "nodeType": "VariableDeclaration",
            "scope": 34,
            "src": "428:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "428:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "581:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "591:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 21,
                      "name": "_proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "614:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "591:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "591:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 25,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "43727970746f7469636b6574",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "527:14:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_01359ea3751bf0491754e68753c55d5631de2058c94bfa376bd92d0cc3f2fd4f",
                      "typeString": "literal_string \"Cryptoticket\""
                    },
                    "value": "Cryptoticket"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "43544b54",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "543:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e529d57ebea5998066c5f19539236c1d3fbf1d2db0e9a93dffa1e30b2f0b400b",
                      "typeString": "literal_string \"CTKT\""
                    },
                    "value": "CTKT"
                  },
                  {
                    "argumentTypes": null,
                    "id": 17,
                    "name": "_proxyRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12,
                    "src": "551:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 18,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14,
                  "name": "TradeableERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 866,
                  "src": "506:20:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TradeableERC721Token_$866_$",
                    "typeString": "type(contract TradeableERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "506:67:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "475:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "474:31:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:0:0"
            },
            "scope": 34,
            "src": "463:179:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "959:103:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "68747470733a2f2f6e7565667771736476332e657865637574652d6170692e75732d656173742d312e616d617a6f6e6177732e636f6d2f74657374696e672f63727970746f7469636b6574732f",
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "976:79:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8fc39bab5251a6a49479f5176982bfff8275a0fdfd3074ac00cbae619a41ae8d",
                      "typeString": "literal_string \"https://nuefwqsdv3.execute-api.us-east-1.amazonaws.com/testing/cryptotickets/\""
                    },
                    "value": "https://nuefwqsdv3.execute-api.us-east-1.amazonaws.com/testing/cryptotickets/"
                  },
                  "functionReturnParameters": 29,
                  "id": 31,
                  "nodeType": "Return",
                  "src": "969:86:0"
                }
              ]
            },
            "documentation": "*********************************************************\nname: baseTokenURI\nparameters: NONE    \nescription: \neturns the base URI for the API endpoint (string)***********************************************************",
            "id": 33,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "baseTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "928:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "951:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "950:8:0"
            },
            "scope": 34,
            "src": "907:155:0",
            "stateMutability": "view",
            "superFunction": 815,
            "visibility": "public"
          }
        ],
        "scope": 35,
        "src": "349:721:0"
      }
    ],
    "src": "0:1073:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/fboyd/Documents/projects/cryptotickets/backend/contracts/Cryptotickets.sol",
    "exportedSymbols": {
      "Cryptotickets": [
        34
      ]
    },
    "id": 35,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/fboyd/Documents/projects/cryptotickets/backend/contracts/TradeableERC721Token.sol",
        "file": "./TradeableERC721Token.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 35,
        "sourceUnit": 867,
        "src": "26:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/fboyd/Documents/projects/cryptotickets/backend/contracts/ProxyRegistry.sol",
        "file": "./ProxyRegistry.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 35,
        "sourceUnit": 147,
        "src": "63:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/fboyd/Documents/projects/cryptotickets/backend/contracts/Strings.sol",
        "file": "./Strings.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 35,
        "sourceUnit": 467,
        "src": "93:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "TradeableERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 866,
              "src": "375:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TradeableERC721Token_$866",
                "typeString": "contract TradeableERC721Token"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "375:20:0"
          }
        ],
        "contractDependencies": [
          866,
          1215,
          1266,
          1446,
          1473,
          1493,
          1500,
          1622,
          2170,
          2562
        ],
        "contractKind": "contract",
        "documentation": "************************************************************\n@title Cryptoticket\nDescription:\nCryptotickets are an ERC721 implementation for event tickets **************************************************************",
        "fullyImplemented": true,
        "id": 34,
        "linearizedBaseContracts": [
          34,
          866,
          1446,
          2562,
          1500,
          1493,
          1473,
          2170,
          1622,
          1266,
          1215
        ],
        "name": "Cryptotickets",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "contractScope": null,
              "id": 7,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 466,
              "src": "408:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$466",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "402:20:0",
            "typeName": null
          },
          {
            "constant": false,
            "id": 10,
            "name": "proxyRegistryAddress",
            "nodeType": "VariableDeclaration",
            "scope": 34,
            "src": "428:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "428:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "581:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "591:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 21,
                      "name": "_proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "614:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "591:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "591:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 25,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "43727970746f7469636b6574",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "527:14:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_01359ea3751bf0491754e68753c55d5631de2058c94bfa376bd92d0cc3f2fd4f",
                      "typeString": "literal_string \"Cryptoticket\""
                    },
                    "value": "Cryptoticket"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "43544b54",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "543:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e529d57ebea5998066c5f19539236c1d3fbf1d2db0e9a93dffa1e30b2f0b400b",
                      "typeString": "literal_string \"CTKT\""
                    },
                    "value": "CTKT"
                  },
                  {
                    "argumentTypes": null,
                    "id": 17,
                    "name": "_proxyRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12,
                    "src": "551:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 18,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14,
                  "name": "TradeableERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 866,
                  "src": "506:20:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TradeableERC721Token_$866_$",
                    "typeString": "type(contract TradeableERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "506:67:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "475:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "474:31:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:0:0"
            },
            "scope": 34,
            "src": "463:179:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "959:103:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "68747470733a2f2f6e7565667771736476332e657865637574652d6170692e75732d656173742d312e616d617a6f6e6177732e636f6d2f74657374696e672f63727970746f7469636b6574732f",
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "976:79:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8fc39bab5251a6a49479f5176982bfff8275a0fdfd3074ac00cbae619a41ae8d",
                      "typeString": "literal_string \"https://nuefwqsdv3.execute-api.us-east-1.amazonaws.com/testing/cryptotickets/\""
                    },
                    "value": "https://nuefwqsdv3.execute-api.us-east-1.amazonaws.com/testing/cryptotickets/"
                  },
                  "functionReturnParameters": 29,
                  "id": 31,
                  "nodeType": "Return",
                  "src": "969:86:0"
                }
              ]
            },
            "documentation": "*********************************************************\nname: baseTokenURI\nparameters: NONE    \nescription: \neturns the base URI for the API endpoint (string)***********************************************************",
            "id": 33,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "baseTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "928:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "951:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "950:8:0"
            },
            "scope": 34,
            "src": "907:155:0",
            "stateMutability": "view",
            "superFunction": 815,
            "visibility": "public"
          }
        ],
        "scope": 35,
        "src": "349:721:0"
      }
    ],
    "src": "0:1073:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xdBB1E72c28782661dDF6637f40f033D87C3eadFF",
      "transactionHash": "0x4863b1fffdeeb17d434d88a411c97372e4b6a7f22b681227022e17a7cad3afc4"
    },
    "1546636949830": {
      "events": {},
      "links": {},
      "address": "0xf4089A5349d8C9dF89f2cf03cf03416058B034Fd",
      "transactionHash": "0xb3cd7554204ecbfcb80dfc39580fd3748f7c1df344438499d95a98a792363f15"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-05T15:00:06.568Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "_to": "address to be approved for the given token ID",
          "_tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "_owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "exists(uint256)": {
        "details": "Returns whether the specified token exists",
        "params": {
          "_tokenId": "uint256 ID of the token to query the existence of"
        },
        "return": "whether the token exists"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set",
        "params": {
          "_tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "mintTo(address)": {
        "details": "Mints a token to an address with a tokenURI.",
        "params": {
          "_to": "address of the future owner of the token"
        }
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "_tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.   * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "_approved": "representing the status of the approval to be set",
          "_to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "_index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "_index": "uint256 representing the index to be accessed of the requested tokens list",
          "_owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_from": "current owner of the token",
          "_to": "address to receive the ownership of the given token ID",
          "_tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Cryptoticket Description: Cryptotickets are an ERC721 implementation for event tickets **************************************************************"
  },
  "userdoc": {
    "methods": {
      "baseTokenURI()": {
        "notice": "********************************************************* name: baseTokenURI parameters: NONE     escription:  eturns the base URI for the API endpoint (string)***********************************************************"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}